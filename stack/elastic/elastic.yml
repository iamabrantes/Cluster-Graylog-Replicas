version: '3.8'

services:

  master:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    environment:
      - node.name=elk_master.{{.Task.Slot}}
      - cluster.name=elastic
      - node.master=true
      - node.data=false
      - discovery.seed_hosts=tasks.master
      - cluster.initial_master_nodes=elk_master.1,elk_master.2
      - bootstrap.memory_lock=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "TZ=America/Sao_Paulo"
    volumes:
      - master:/usr/share/elasticsearch/data
    networks:
      - elk
    deploy:
      replicas: 2
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=elk"
        #Primeiro bloco para criação da primeira porta
        - "traefik.tcp.routers.elasticsearch1.rule=HostSNI(`*`)"
        - "traefik.tcp.routers.elasticsearch1.entrypoints=elastic1"
        - "traefik.tcp.services.elasticsearch1.loadbalancer.server.port=9200"
        - "traefik.tcp.routers.elasticsearch1.service=elasticsearch1" 

  data:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    environment:
      - node.name=elk_data.{{.Task.Slot}}
      - cluster.name=elastic
      - node.master=false
      - node.data=true
      - discovery.seed_hosts=tasks.master
      - cluster.initial_master_nodes=elk_master.1,elk_master.2
      - bootstrap.memory_lock=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "TZ=America/Sao_Paulo"
    volumes:
      - data:/usr/share/elasticsearch/data
    networks:
      - elk
    deploy:
      replicas: 2
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=elk"
        #Primeiro bloco para criação da primeira porta
        - "traefik.tcp.routers.elasticsearch1.rule=HostSNI(`*`)"
        - "traefik.tcp.routers.elasticsearch1.entrypoints=elastic1"
        - "traefik.tcp.services.elasticsearch1.loadbalancer.server.port=9200"
        - "traefik.tcp.routers.elasticsearch1.service=elasticsearch1" 

volumes:
  master:
    name: '{{.Service.Name}}-{{.Task.Slot}}'
  data:
    name: '{{.Service.Name}}-{{.Task.Slot}}'
  search:
    name: '{{.Service.Name}}-{{.Task.Slot}}'
networks:
  elk:
    external: true